%% 🔹 1. 테스트 데이터 불러오기
fprintf("[INFO] 테스트 데이터 불러오는 중...\n");
test = readtable("test_label.csv");

fprintf("[INFO] FARSITE 평균 전이 확률 계산 중...\n");
farsite_cols = {'P_NW','P_N','P_NE','P_W','P_E','P_SW','P_S','P_SE'};
farsite_vals = test{:, farsite_cols};
test.farsite_prob = mean(farsite_vals, 2);  % NaN 없으므로 바로 mean 사용 가능

%% 🔹 2. 입력 피처 구성 (학습과 동일하게)
fprintf("[INFO] 입력 피처 구성 중...\n");
X = test{:, {
    'avg_fuelload_pertree_kg', ...
    'FFMC', 'DMC', 'DC', ...
    'NDVI', 'smap_20250630_filled', ...
    'temp_C', 'humidity', ...
    'wind_speed', 'wind_deg', ...
    'precip_mm', 'mean_slope', 'spei_recent_avg', ...
    'farsite_prob'
}};

%% 🔹 3. 학습된 모델 불러오기
fprintf("[INFO] 학습된 Gradient Boosting 모델 불러오는 중...\n");
load("gradient_boosting_pspread_model_300trees_20250706_131211.mat");  % 파일명은 필요시 변경

%% 🔹 4. 예측 수행
fprintf("[INFO] 예측 수행 중...\n");
Y_pred = predict(model, X);

%% 🔹 5. 결과 테이블 구성
fprintf("[INFO] 결과 테이블 생성 중...\n");
result_table = table( ...
    test.grid_id, ...
    test.lat_min, test.lat_max, ...
    test.lon_min, test.lon_max, ...
    test.center_lat, test.center_lon, ...
    Y_pred, ...
    'VariableNames', {'grid_id', 'lat_min', 'lat_max', ...
                      'lon_min', 'lon_max', ...
                      'center_lat', 'center_lon', ...
                      'pSpread_pred'});

%% 🔹 6. 결과 저장
output_filename = ['gbr_predicted_pspread_', datestr(now, 'yyyymmdd_HHMMSS'), '.csv'];
writetable(result_table, output_filename);

fprintf("[INFO] 예측 결과 파일이 저장되었습니다 → %s\n", output_filename);
